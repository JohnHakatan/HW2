
///test of Tsahi and Doron
#include <iostream>
#include "HashTable.h"
#include <cassert>
using namespace std;

class Player{
private:
    int key;
    int data;
public:
    Player(int key, int data): key(key), data(data) {}
    int getID()
    {
        return key;
    }
    int getData()
    {
        return data;
    }
};
int main()
{
    // Player tomb_player(-2,-2);
    // HashTable<Player*> table(&tomb_player);
    HashTable<Player*> table=HashTable<Player*>();
    ///insert here the tests
    //remove insert, find, 100 players

Player player1(32,1019);
Player player2(41,1180);
Player player3(89,305);
Player player4(91,1455);
Player player5(98,74);
Player player6(56,260);
Player player7(58,802);
Player player8(18,272);
Player player9(86,473);
Player player10(44,313);
Player player11(42,65);
Player player12(84,566);
Player player13(80,1111);
Player player14(8,1191);
Player player15(82,726);
Player player16(45,331);
Player player17(65,1266);
Player player18(76,1369);
Player player19(66,1439);
Player player20(70,927);
Player player21(77,65);
Player player22(31,1030);
Player player23(6,1175);
Player player24(25,1495);
Player player25(22,1168);
Player player26(90,671);
Player player27(39,1409);
Player player28(9,1475);
Player player29(62,633);
Player player30(53,448);
Player player31(64,540);
Player player32(17,689);
Player player33(95,1428);
Player player34(49,264);
Player player35(88,986);
Player player36(81,1226);
Player player37(47,3);
Player player38(29,917);
Player player39(20,339);
Player player40(57,351);
Player player41(10,119);
Player player42(85,31);
Player player43(94,221);
Player player44(7,1458);
Player player45(26,76);
Player player46(78,1138);
Player player47(43,1046);
Player player48(21,524);
Player player49(14,1052);
Player player50(16,87);
Player player51(37,693);
Player player52(19,1019);
Player player53(73,351);
Player player54(15,560);
Player player55(55,1468);
Player player56(35,1477);
Player player57(34,562);
Player player58(52,1085);
Player player59(71,1274);
Player player60(3,960);
Player player61(51,1131);
Player player62(75,435);
Player player63(38,1104);
Player player64(4,440);
Player player65(59,922);
Player player66(99,287);
Player player67(50,64);
Player player68(67,1038);
Player player69(97,604);
Player player70(13,18);
Player player71(83,1249);
Player player72(60,759);
Player player73(33,1002);
Player player74(12,1366);
Player player75(11,8);
Player player76(24,1228);
Player player77(27,181);
Player player78(72,555);
Player player79(79,922);
Player player80(40,1061);
Player player81(96,748);
Player player82(93,170);
Player player83(2,1275);
Player player84(87,724);
Player player85(46,1051);
Player player86(92,1375);
Player player87(69,1358);
Player player88(36,1415);
Player player89(61,1146);
Player player90(1,945);
Player player91(23,861);
Player player92(68,73);
Player player93(48,297);
Player player94(54,651);
Player player95(74,533);
Player player96(30,91);
Player player97(63,1289);
Player player98(5,457);
Player player99(28,1449);
Player player100(38,1450);
Player player101(48,1451);
Player player102(58,14461);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.insert(player39.getID(), &player39)==FAILURE);
assert(table.remove(player74.getID())==FAILURE);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.remove(player23.getID())==FAILURE);
assert(table.find(player58.getID())==nullptr);
assert(table.find(player8.getID())==nullptr);
assert(table.remove(player66.getID())==FAILURE);
assert(table.remove(player70.getID())==FAILURE);
assert(table.remove(player71.getID())==FAILURE);
assert(table.find(player1.getID())==nullptr);
assert(table.find(player93.getID())==nullptr);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.remove(player61.getID())==FAILURE);
assert(table.insert(player50.getID(), &player50)==SUCCESS);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.find(player78.getID())==nullptr);
assert(table.remove(player76.getID())==FAILURE);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.find(player47.getID())==nullptr);
assert(table.find(player3.getID())==nullptr);
assert(table.insert(player47.getID(), &player47)==SUCCESS);
assert(table.remove(player42.getID())==FAILURE);
assert(table.find(player32.getID())==nullptr);
assert(table.remove(player79.getID())==FAILURE);
assert(table.remove(player70.getID())==FAILURE);
assert(table.remove(player28.getID())==FAILURE);
assert(table.find(player34.getID())==nullptr);
assert(table.remove(player59.getID())==FAILURE);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.find(player9.getID())==nullptr);
assert(table.remove(player52.getID())==FAILURE);
assert(table.remove(player23.getID())==FAILURE);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.remove(player79.getID())==FAILURE);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.remove(player6.getID())==FAILURE);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.find(player93.getID())==nullptr);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.remove(player55.getID())==FAILURE);
assert(table.find(player9.getID())==nullptr);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.insert(player47.getID(), &player47)==FAILURE);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.remove(player36.getID())==FAILURE);
assert(table.find(player66.getID())==nullptr);
assert(table.remove(player92.getID())==FAILURE);
assert(table.find(player63.getID())==nullptr);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.find(player9.getID())==nullptr);
assert(table.insert(player69.getID(), &player69)==SUCCESS);
assert(table.find(player20.getID())==nullptr);
assert(table.find(player72.getID())==nullptr);
assert(table.find(player44.getID())==nullptr);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.remove(player6.getID())==FAILURE);
assert(table.find(player38.getID())!=nullptr);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.insert(player35.getID(), &player35)==FAILURE);
assert(table.find(player67.getID())!=nullptr);
assert(table.find(player18.getID())!=nullptr);
assert(table.remove(player12.getID())==FAILURE);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.find(player1.getID())==nullptr);
assert(table.remove(player73.getID())==FAILURE);
assert(table.insert(player10.getID(), &player10)==FAILURE);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.remove(player2.getID())==FAILURE);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.remove(player92.getID())==FAILURE);
assert(table.find(player81.getID())==nullptr);
assert(table.remove(player52.getID())==FAILURE);
assert(table.find(player71.getID())==nullptr);
assert(table.find(player11.getID())==nullptr);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.find(player10.getID())!=nullptr);
assert(table.find(player8.getID())==nullptr);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.find(player29.getID())!=nullptr);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.remove(player55.getID())==FAILURE);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.insert(player91.getID(), &player91)==SUCCESS);
assert(table.insert(player20.getID(), &player20)==SUCCESS);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.remove(player14.getID())==FAILURE);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.remove(player82.getID())==FAILURE);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.remove(player75.getID())==FAILURE);
assert(table.find(player5.getID())!=nullptr);
assert(table.remove(player88.getID())==FAILURE);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.insert(player5.getID(), &player5)==FAILURE);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.remove(player62.getID())==FAILURE);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.remove(player82.getID())==FAILURE);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.find(player48.getID())==nullptr);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.remove(player5.getID())==SUCCESS);
assert(table.insert(player89.getID(), &player89)==SUCCESS);
assert(table.remove(player2.getID())==FAILURE);
assert(table.insert(player5.getID(), &player5)==SUCCESS);
assert(table.find(player93.getID())==nullptr);
assert(table.remove(player98.getID())==SUCCESS);
assert(table.find(player68.getID())==nullptr);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.remove(player40.getID())==FAILURE);
assert(table.insert(player51.getID(), &player51)==FAILURE);
assert(table.remove(player83.getID())==FAILURE);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.find(player91.getID())!=nullptr);
assert(table.find(player83.getID())==nullptr);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.insert(player43.getID(), &player43)==FAILURE);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.find(player60.getID())==nullptr);
assert(table.insert(player2.getID(), &player2)==SUCCESS);
assert(table.remove(player98.getID())==FAILURE);
assert(table.insert(player79.getID(), &player79)==FAILURE);
assert(table.find(player26.getID())==nullptr);
assert(table.find(player43.getID())==nullptr);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.find(player62.getID())==nullptr);
assert(table.find(player15.getID())==nullptr);
assert(table.insert(player99.getID(), &player99)==FAILURE);
assert(table.find(player70.getID())==nullptr);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.insert(player73.getID(), &player73)==FAILURE);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.insert(player98.getID(), &player98)==SUCCESS);
assert(table.remove(player93.getID())==FAILURE);
assert(table.remove(player70.getID())==FAILURE);
assert(table.remove(player21.getID())==FAILURE);
assert(table.find(player19.getID())==nullptr);
assert(table.insert(player15.getID(), &player15)==SUCCESS);
assert(table.find(player40.getID())==nullptr);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.insert(player57.getID(), &player57)==FAILURE);
assert(table.find(player88.getID())!=nullptr);
assert(table.insert(player82.getID(), &player82)==FAILURE);
assert(table.insert(player50.getID(), &player50)==FAILURE);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.remove(player68.getID())==FAILURE);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.find(player62.getID())==nullptr);
assert(table.find(player85.getID())==nullptr);
assert(table.find(player77.getID())==nullptr);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.remove(player11.getID())==FAILURE);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.remove(player45.getID())==SUCCESS);
assert(table.remove(player8.getID())==FAILURE);
assert(table.remove(player44.getID())==FAILURE);
assert(table.insert(player59.getID(), &player59)==FAILURE);
assert(table.remove(player30.getID())==FAILURE);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.remove(player23.getID())==FAILURE);
assert(table.remove(player66.getID())==FAILURE);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.find(player83.getID())!=nullptr);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.remove(player17.getID())==FAILURE);
assert(table.remove(player31.getID())==FAILURE);
assert(table.find(player45.getID())==nullptr);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.insert(player65.getID(), &player65)==FAILURE);
assert(table.find(player97.getID())==nullptr);
assert(table.find(player75.getID())==nullptr);
assert(table.find(player55.getID())==nullptr);
assert(table.remove(player88.getID())==SUCCESS);
assert(table.remove(player64.getID())==FAILURE);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.insert(player24.getID(), &player24)==SUCCESS);
assert(table.remove(player80.getID())==FAILURE);
assert(table.remove(player85.getID())==FAILURE);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.find(player38.getID())!=nullptr);
assert(table.insert(player53.getID(), &player53)==FAILURE);
assert(table.insert(player63.getID(), &player63)==FAILURE);
assert(table.remove(player27.getID())==FAILURE);
assert(table.find(player90.getID())==nullptr);
assert(table.insert(player54.getID(), &player54)==SUCCESS);
assert(table.remove(player81.getID())==FAILURE);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.find(player29.getID())!=nullptr);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.insert(player79.getID(), &player79)==FAILURE);
assert(table.find(player15.getID())!=nullptr);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.insert(player42.getID(), &player42)==FAILURE);
assert(table.insert(player84.getID(), &player84)==FAILURE);
assert(table.insert(player84.getID(), &player84)==FAILURE);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.remove(player44.getID())==FAILURE);
assert(table.remove(player16.getID())==FAILURE);
assert(table.remove(player95.getID())==FAILURE);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.remove(player85.getID())==FAILURE);
assert(table.remove(player36.getID())==SUCCESS);
assert(table.find(player2.getID())!=nullptr);
assert(table.find(player59.getID())!=nullptr);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.find(player6.getID())==nullptr);
assert(table.remove(player13.getID())==FAILURE);
assert(table.find(player64.getID())==nullptr);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.insert(player12.getID(), &player12)==FAILURE);
assert(table.remove(player2.getID())==SUCCESS);
assert(table.remove(player4.getID())==FAILURE);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.find(player77.getID())==nullptr);
assert(table.insert(player98.getID(), &player98)==FAILURE);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.remove(player60.getID())==FAILURE);
assert(table.find(player30.getID())==nullptr);
assert(table.find(player70.getID())==nullptr);
assert(table.find(player71.getID())==nullptr);
assert(table.find(player40.getID())==nullptr);
assert(table.insert(player24.getID(), &player24)==FAILURE);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.find(player15.getID())!=nullptr);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.find(player80.getID())==nullptr);
assert(table.remove(player48.getID())==FAILURE);
assert(table.find(player52.getID())==nullptr);
assert(table.find(player39.getID())==nullptr);
assert(table.find(player31.getID())!=nullptr);
assert(table.insert(player91.getID(), &player91)==FAILURE);
assert(table.insert(player69.getID(), &player69)==FAILURE);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.find(player48.getID())==nullptr);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.find(player29.getID())!=nullptr);
assert(table.insert(player73.getID(), &player73)==FAILURE);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.find(player77.getID())==nullptr);
assert(table.find(player5.getID())!=nullptr);
assert(table.insert(player18.getID(), &player18)==FAILURE);
assert(table.insert(player47.getID(), &player47)==FAILURE);
assert(table.find(player93.getID())==nullptr);
assert(table.find(player2.getID())==nullptr);
assert(table.find(player51.getID())!=nullptr);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.insert(player83.getID(), &player83)==FAILURE);
assert(table.find(player4.getID())!=nullptr);
assert(table.find(player8.getID())==nullptr);
assert(table.remove(player33.getID())==FAILURE);
assert(table.insert(player73.getID(), &player73)==FAILURE);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.remove(player56.getID())==FAILURE);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.insert(player1.getID(), &player1)==FAILURE);
assert(table.find(player98.getID())!=nullptr);
assert(table.insert(player46.getID(), &player46)==FAILURE);
assert(table.insert(player42.getID(), &player42)==SUCCESS);
assert(table.insert(player50.getID(), &player50)==FAILURE);
assert(table.insert(player73.getID(), &player73)==FAILURE);
assert(table.remove(player96.getID())==FAILURE);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.remove(player85.getID())==FAILURE);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.find(player6.getID())==nullptr);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.find(player85.getID())==nullptr);
assert(table.find(player94.getID())==nullptr);
assert(table.find(player30.getID())==nullptr);
assert(table.remove(player22.getID())==SUCCESS);
assert(table.find(player21.getID())==nullptr);
assert(table.insert(player13.getID(), &player13)==FAILURE);
assert(table.insert(player39.getID(), &player39)==FAILURE);
assert(table.find(player44.getID())!=nullptr);
assert(table.find(player16.getID())==nullptr);
assert(table.find(player27.getID())==nullptr);
assert(table.insert(player5.getID(), &player5)==FAILURE);
assert(table.find(player27.getID())==nullptr);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.insert(player55.getID(), &player55)==FAILURE);
assert(table.insert(player54.getID(), &player54)==FAILURE);
assert(table.find(player42.getID())!=nullptr);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.find(player45.getID())==nullptr);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.insert(player65.getID(), &player65)==FAILURE);
assert(table.insert(player29.getID(), &player29)==FAILURE);
assert(table.find(player13.getID())!=nullptr);
assert(table.remove(player93.getID())==FAILURE);
assert(table.find(player93.getID())==nullptr);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.find(player60.getID())==nullptr);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.remove(player99.getID())==FAILURE);
assert(table.find(player49.getID())==nullptr);
assert(table.insert(player38.getID(), &player38)==FAILURE);
assert(table.find(player21.getID())==nullptr);
assert(table.find(player77.getID())==nullptr);
assert(table.find(player97.getID())!=nullptr);
assert(table.remove(player86.getID())==FAILURE);
assert(table.find(player63.getID())!=nullptr);
assert(table.find(player45.getID())==nullptr);
assert(table.remove(player34.getID())==FAILURE);
assert(table.find(player60.getID())==nullptr);
assert(table.find(player6.getID())==nullptr);
assert(table.find(player28.getID())==nullptr);
assert(table.find(player63.getID())!=nullptr);
assert(table.insert(player68.getID(), &player68)==SUCCESS);
assert(table.find(player85.getID())==nullptr);
assert(table.remove(player40.getID())==FAILURE);
assert(table.remove(player22.getID())==FAILURE);
assert(table.remove(player30.getID())==FAILURE);
assert(table.remove(player67.getID())==FAILURE);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.find(player47.getID())!=nullptr);
assert(table.find(player36.getID())==nullptr);
assert(table.find(player91.getID())!=nullptr);
assert(table.insert(player12.getID(), &player12)==FAILURE);
assert(table.find(player69.getID())!=nullptr);
assert(table.insert(player91.getID(), &player91)==FAILURE);
assert(table.insert(player9.getID(), &player9)==FAILURE);
assert(table.find(player48.getID())==nullptr);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.find(player7.getID())==nullptr);
assert(table.remove(player6.getID())==FAILURE);
assert(table.remove(player88.getID())==FAILURE);
assert(table.insert(player8.getID(), &player8)==SUCCESS);
assert(table.find(player62.getID())!=nullptr);
assert(table.remove(player75.getID())==FAILURE);
assert(table.remove(player51.getID())==SUCCESS);
assert(table.remove(player31.getID())==SUCCESS);
assert(table.remove(player33.getID())==FAILURE);
assert(table.find(player44.getID())!=nullptr);
assert(table.find(player25.getID())==nullptr);
assert(table.insert(player80.getID(), &player80)==SUCCESS);
assert(table.find(player3.getID())==nullptr);
assert(table.find(player93.getID())==nullptr);
assert(table.remove(player36.getID())==FAILURE);
assert(table.remove(player84.getID())==SUCCESS);
assert(table.remove(player25.getID())==FAILURE);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.insert(player68.getID(), &player68)==FAILURE);
assert(table.find(player7.getID())==nullptr);
assert(table.remove(player33.getID())==FAILURE);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.insert(player57.getID(), &player57)==FAILURE);
assert(table.insert(player7.getID(), &player7)==SUCCESS);
assert(table.remove(player16.getID())==FAILURE);
assert(table.remove(player88.getID())==FAILURE);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.insert(player59.getID(), &player59)==FAILURE);
assert(table.find(player11.getID())!=nullptr);
assert(table.find(player95.getID())==nullptr);
assert(table.remove(player91.getID())==SUCCESS);
assert(table.remove(player34.getID())==FAILURE);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.insert(player76.getID(), &player76)==FAILURE);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.find(player20.getID())!=nullptr);
assert(table.insert(player22.getID(), &player22)==SUCCESS);
assert(table.find(player65.getID())!=nullptr);
assert(table.remove(player6.getID())==FAILURE);
assert(table.find(player27.getID())==nullptr);
assert(table.find(player87.getID())!=nullptr);
assert(table.find(player24.getID())!=nullptr);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.remove(player70.getID())==FAILURE);
assert(table.remove(player53.getID())==FAILURE);
assert(table.remove(player45.getID())==FAILURE);
assert(table.find(player27.getID())==nullptr);
assert(table.find(player21.getID())==nullptr);
assert(table.insert(player7.getID(), &player7)==FAILURE);
assert(table.remove(player16.getID())==FAILURE);
assert(table.insert(player60.getID(), &player60)==SUCCESS);
assert(table.find(player84.getID())==nullptr);
assert(table.find(player13.getID())!=nullptr);
assert(table.find(player51.getID())==nullptr);
assert(table.find(player6.getID())==nullptr);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.remove(player8.getID())==SUCCESS);
assert(table.remove(player16.getID())==FAILURE);
assert(table.find(player16.getID())==nullptr);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.find(player29.getID())!=nullptr);
assert(table.find(player97.getID())==nullptr);
assert(table.insert(player42.getID(), &player42)==FAILURE);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.find(player78.getID())==nullptr);
assert(table.find(player29.getID())!=nullptr);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.find(player48.getID())==nullptr);
assert(table.remove(player31.getID())==FAILURE);
assert(table.find(player52.getID())==nullptr);
assert(table.remove(player8.getID())==FAILURE);
assert(table.remove(player63.getID())==SUCCESS);
assert(table.find(player25.getID())==nullptr);
assert(table.find(player45.getID())==nullptr);
assert(table.find(player58.getID())==nullptr);
assert(table.insert(player16.getID(), &player16)==SUCCESS);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.insert(player37.getID(), &player37)==FAILURE);
assert(table.remove(player27.getID())==FAILURE);
assert(table.insert(player73.getID(), &player73)==FAILURE);
assert(table.find(player56.getID())==nullptr);
assert(table.insert(player74.getID(), &player74)==SUCCESS);
assert(table.find(player99.getID())==nullptr);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.find(player71.getID())==nullptr);
assert(table.remove(player58.getID())==FAILURE);
assert(table.find(player72.getID())!=nullptr);
assert(table.find(player28.getID())==nullptr);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.insert(player16.getID(), &player16)==FAILURE);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.find(player74.getID())!=nullptr);
assert(table.find(player57.getID())!=nullptr);
assert(table.remove(player87.getID())==SUCCESS);
assert(table.remove(player49.getID())==FAILURE);
assert(table.remove(player40.getID())==SUCCESS);
assert(table.remove(player54.getID())==SUCCESS);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.remove(player46.getID())==SUCCESS);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.remove(player63.getID())==FAILURE);
assert(table.find(player22.getID())!=nullptr);
assert(table.insert(player57.getID(), &player57)==FAILURE);
assert(table.find(player16.getID())!=nullptr);
assert(table.find(player68.getID())!=nullptr);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.insert(player61.getID(), &player61)==SUCCESS);
assert(table.insert(player73.getID(), &player73)==FAILURE);
assert(table.remove(player93.getID())==SUCCESS);
assert(table.find(player58.getID())==nullptr);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.insert(player28.getID(), &player28)==FAILURE);
assert(table.insert(player39.getID(), &player39)==FAILURE);
assert(table.insert(player39.getID(), &player39)==FAILURE);
assert(table.insert(player17.getID(), &player17)==FAILURE);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player46.getID())==nullptr);
assert(table.insert(player24.getID(), &player24)==FAILURE);
assert(table.insert(player97.getID(), &player97)==SUCCESS);
assert(table.insert(player66.getID(), &player66)==FAILURE);
assert(table.find(player39.getID())!=nullptr);
assert(table.remove(player96.getID())==FAILURE);
assert(table.remove(player99.getID())==FAILURE);
assert(table.find(player97.getID())!=nullptr);
assert(table.insert(player98.getID(), &player98)==FAILURE);
assert(table.remove(player9.getID())==SUCCESS);
assert(table.find(player39.getID())!=nullptr);
assert(table.find(player12.getID())!=nullptr);
assert(table.remove(player58.getID())==FAILURE);
assert(table.insert(player19.getID(), &player19)==SUCCESS);
assert(table.find(player21.getID())==nullptr);
assert(table.remove(player64.getID())==FAILURE);
assert(table.remove(player43.getID())==FAILURE);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.insert(player16.getID(), &player16)==FAILURE);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.remove(player32.getID())==FAILURE);
assert(table.find(player51.getID())==nullptr);
assert(table.remove(player70.getID())==FAILURE);
assert(table.find(player19.getID())!=nullptr);
assert(table.remove(player65.getID())==SUCCESS);
assert(table.insert(player42.getID(), &player42)==FAILURE);
assert(table.find(player55.getID())!=nullptr);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.insert(player71.getID(), &player71)==SUCCESS);
assert(table.find(player54.getID())==nullptr);
assert(table.insert(player97.getID(), &player97)==FAILURE);
assert(table.insert(player74.getID(), &player74)==FAILURE);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.insert(player10.getID(), &player10)==SUCCESS);
assert(table.find(player59.getID())!=nullptr);
assert(table.insert(player89.getID(), &player89)==FAILURE);
assert(table.find(player91.getID())==nullptr);
assert(table.find(player30.getID())==nullptr);
assert(table.find(player55.getID())!=nullptr);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.find(player13.getID())!=nullptr);
assert(table.find(player61.getID())!=nullptr);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.insert(player45.getID(), &player45)==SUCCESS);
assert(table.find(player56.getID())!=nullptr);
assert(table.remove(player34.getID())==SUCCESS);
assert(table.find(player18.getID())==nullptr);
assert(table.find(player98.getID())!=nullptr);
assert(table.find(player30.getID())==nullptr);
assert(table.find(player13.getID())!=nullptr);
assert(table.find(player30.getID())==nullptr);
assert(table.find(player5.getID())!=nullptr);
assert(table.insert(player50.getID(), &player50)==FAILURE);
assert(table.find(player46.getID())==nullptr);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.find(player72.getID())!=nullptr);
assert(table.remove(player33.getID())==SUCCESS);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.find(player7.getID())!=nullptr);
assert(table.remove(player41.getID())==SUCCESS);
assert(table.remove(player85.getID())==FAILURE);
assert(table.find(player37.getID())==nullptr);
assert(table.find(player98.getID())!=nullptr);
assert(table.find(player96.getID())==nullptr);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.find(player10.getID())!=nullptr);
assert(table.remove(player53.getID())==SUCCESS);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.find(player45.getID())!=nullptr);
assert(table.insert(player89.getID(), &player89)==FAILURE);
assert(table.remove(player75.getID())==SUCCESS);
assert(table.insert(player37.getID(), &player37)==SUCCESS);
assert(table.find(player36.getID())==nullptr);
assert(table.find(player45.getID())!=nullptr);
assert(table.remove(player1.getID())==FAILURE);
assert(table.find(player17.getID())!=nullptr);
assert(table.insert(player56.getID(), &player56)==FAILURE);
assert(table.find(player79.getID())==nullptr);
assert(table.insert(player86.getID(), &player86)==FAILURE);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.find(player40.getID())==nullptr);
assert(table.find(player77.getID())==nullptr);
assert(table.find(player21.getID())==nullptr);
assert(table.insert(player13.getID(), &player13)==FAILURE);
assert(table.find(player27.getID())==nullptr);
assert(table.remove(player6.getID())==FAILURE);
assert(table.find(player46.getID())==nullptr);
assert(table.insert(player10.getID(), &player10)==FAILURE);
assert(table.insert(player92.getID(), &player92)==SUCCESS);
assert(table.find(player91.getID())==nullptr);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.insert(player70.getID(), &player70)==SUCCESS);
assert(table.insert(player33.getID(), &player33)==SUCCESS);
assert(table.remove(player19.getID())==SUCCESS);
assert(table.remove(player28.getID())==SUCCESS);
assert(table.find(player85.getID())==nullptr);
assert(table.find(player78.getID())==nullptr);
assert(table.remove(player42.getID())==SUCCESS);
assert(table.insert(player98.getID(), &player98)==FAILURE);
assert(table.insert(player41.getID(), &player41)==SUCCESS);
assert(table.find(player65.getID())==nullptr);
assert(table.insert(player90.getID(), &player90)==SUCCESS);
assert(table.insert(player40.getID(), &player40)==SUCCESS);
assert(table.find(player44.getID())!=nullptr);
assert(table.find(player34.getID())==nullptr);
assert(table.find(player65.getID())==nullptr);
assert(table.insert(player50.getID(), &player50)==FAILURE);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.insert(player4.getID(), &player4)==FAILURE);
assert(table.remove(player31.getID())==FAILURE);
assert(table.find(player80.getID())!=nullptr);
assert(table.find(player9.getID())==nullptr);
assert(table.insert(player38.getID(), &player38)==FAILURE);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.remove(player84.getID())==FAILURE);
assert(table.insert(player38.getID(), &player38)==FAILURE);
assert(table.insert(player17.getID(), &player17)==FAILURE);
assert(table.remove(player51.getID())==FAILURE);
assert(table.find(player78.getID())==nullptr);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.insert(player17.getID(), &player17)==FAILURE);
assert(table.remove(player34.getID())==FAILURE);
assert(table.insert(player66.getID(), &player66)==SUCCESS);
assert(table.find(player23.getID())==nullptr);
assert(table.find(player33.getID())!=nullptr);
assert(table.find(player70.getID())!=nullptr);
assert(table.remove(player84.getID())==FAILURE);
assert(table.insert(player68.getID(), &player68)==FAILURE);
assert(table.remove(player50.getID())==SUCCESS);
assert(table.find(player86.getID())!=nullptr);
assert(table.insert(player83.getID(), &player83)==SUCCESS);
assert(table.find(player19.getID())==nullptr);
assert(table.find(player67.getID())==nullptr);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.find(player84.getID())==nullptr);
assert(table.remove(player66.getID())==SUCCESS);
assert(table.find(player2.getID())==nullptr);
assert(table.remove(player3.getID())==FAILURE);
assert(table.remove(player25.getID())==FAILURE);
assert(table.remove(player31.getID())==FAILURE);
assert(table.remove(player72.getID())==SUCCESS);
assert(table.insert(player31.getID(), &player31)==SUCCESS);
assert(table.remove(player97.getID())==SUCCESS);
assert(table.insert(player99.getID(), &player99)==SUCCESS);
assert(table.find(player58.getID())==nullptr);
assert(table.remove(player83.getID())==SUCCESS);
assert(table.insert(player21.getID(), &player21)==SUCCESS);
assert(table.remove(player52.getID())==FAILURE);
assert(table.remove(player77.getID())==FAILURE);
assert(table.find(player89.getID())!=nullptr);
assert(table.find(player21.getID())!=nullptr);
assert(table.insert(player95.getID(), &player95)==FAILURE);
assert(table.find(player20.getID())!=nullptr);
assert(table.remove(player28.getID())==FAILURE);
assert(table.find(player79.getID())==nullptr);
assert(table.find(player85.getID())==nullptr);
assert(table.insert(player63.getID(), &player63)==SUCCESS);
assert(table.remove(player88.getID())==FAILURE);
assert(table.remove(player3.getID())==FAILURE);
assert(table.find(player81.getID())==nullptr);
assert(table.find(player58.getID())==nullptr);
assert(table.find(player65.getID())==nullptr);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.find(player58.getID())==nullptr);
assert(table.find(player89.getID())!=nullptr);
assert(table.insert(player86.getID(), &player86)==FAILURE);
assert(table.insert(player3.getID(), &player3)==SUCCESS);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.remove(player84.getID())==FAILURE);
assert(table.remove(player52.getID())==FAILURE);
assert(table.remove(player24.getID())==SUCCESS);
assert(table.remove(player57.getID())==FAILURE);
assert(table.find(player84.getID())==nullptr);
assert(table.find(player54.getID())==nullptr);
assert(table.find(player83.getID())==nullptr);
assert(table.insert(player35.getID(), &player35)==SUCCESS);
assert(table.find(player39.getID())==nullptr);
assert(table.find(player87.getID())==nullptr);
assert(table.find(player97.getID())==nullptr);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.insert(player73.getID(), &player73)==FAILURE);
assert(table.remove(player64.getID())==FAILURE);
assert(table.remove(player93.getID())==FAILURE);
assert(table.remove(player42.getID())==FAILURE);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.insert(player59.getID(), &player59)==FAILURE);
assert(table.remove(player59.getID())==SUCCESS);
assert(table.find(player50.getID())==nullptr);
assert(table.find(player47.getID())!=nullptr);
assert(table.find(player46.getID())==nullptr);
assert(table.find(player77.getID())==nullptr);
assert(table.remove(player19.getID())==FAILURE);
assert(table.remove(player81.getID())==SUCCESS);
assert(table.remove(player32.getID())==FAILURE);
assert(table.remove(player72.getID())==FAILURE);
assert(table.find(player35.getID())!=nullptr);
assert(table.find(player95.getID())!=nullptr);
assert(table.insert(player41.getID(), &player41)==FAILURE);
assert(table.insert(player85.getID(), &player85)==SUCCESS);
assert(table.find(player95.getID())!=nullptr);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.find(player10.getID())!=nullptr);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.find(player17.getID())!=nullptr);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.remove(player81.getID())==FAILURE);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.remove(player84.getID())==FAILURE);
assert(table.remove(player53.getID())==FAILURE);
assert(table.remove(player38.getID())==SUCCESS);
assert(table.insert(player51.getID(), &player51)==SUCCESS);
assert(table.insert(player15.getID(), &player15)==FAILURE);
assert(table.insert(player85.getID(), &player85)==FAILURE);
assert(table.remove(player19.getID())==FAILURE);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.remove(player91.getID())==FAILURE);
assert(table.find(player16.getID())!=nullptr);
assert(table.find(player28.getID())==nullptr);
assert(table.remove(player86.getID())==SUCCESS);
assert(table.remove(player30.getID())==SUCCESS);
assert(table.find(player37.getID())!=nullptr);
assert(table.remove(player74.getID())==SUCCESS);
assert(table.remove(player8.getID())==FAILURE);
assert(table.find(player25.getID())==nullptr);
assert(table.find(player55.getID())==nullptr);
assert(table.remove(player74.getID())==FAILURE);
assert(table.find(player68.getID())!=nullptr);
assert(table.remove(player67.getID())==SUCCESS);
assert(table.remove(player84.getID())==FAILURE);
assert(table.find(player33.getID())!=nullptr);
assert(table.find(player21.getID())!=nullptr);
assert(table.remove(player19.getID())==FAILURE);
assert(table.insert(player41.getID(), &player41)==FAILURE);
assert(table.insert(player81.getID(), &player81)==SUCCESS);
assert(table.remove(player77.getID())==FAILURE);
assert(table.find(player52.getID())==nullptr);
assert(table.find(player53.getID())==nullptr);
assert(table.insert(player40.getID(), &player40)==FAILURE);
assert(table.insert(player92.getID(), &player92)==FAILURE);
assert(table.remove(player3.getID())==SUCCESS);
assert(table.find(player81.getID())!=nullptr);
assert(table.find(player90.getID())!=nullptr);
assert(table.remove(player28.getID())==FAILURE);
assert(table.remove(player38.getID())==FAILURE);
assert(table.find(player18.getID())==nullptr);
assert(table.insert(player18.getID(), &player18)==SUCCESS);
assert(table.remove(player3.getID())==FAILURE);
assert(table.remove(player29.getID())==SUCCESS);
assert(table.remove(player62.getID())==SUCCESS);
assert(table.insert(player28.getID(), &player28)==SUCCESS);
assert(table.find(player36.getID())==nullptr);
assert(table.remove(player43.getID())==FAILURE);
assert(table.insert(player38.getID(), &player38)==SUCCESS);
assert(table.remove(player13.getID())==FAILURE);
assert(table.remove(player20.getID())==SUCCESS);
assert(table.find(player11.getID())!=nullptr);
assert(table.find(player63.getID())!=nullptr);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.find(player28.getID())!=nullptr);
assert(table.find(player15.getID())!=nullptr);
assert(table.insert(player65.getID(), &player65)==SUCCESS);
assert(table.find(player9.getID())==nullptr);
assert(table.insert(player67.getID(), &player67)==SUCCESS);
assert(table.remove(player88.getID())==FAILURE);
assert(table.remove(player16.getID())==SUCCESS);
assert(table.remove(player11.getID())==SUCCESS);
assert(table.insert(player89.getID(), &player89)==FAILURE);
assert(table.insert(player45.getID(), &player45)==FAILURE);
assert(table.find(player89.getID())!=nullptr);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.find(player51.getID())!=nullptr);
assert(table.insert(player12.getID(), &player12)==FAILURE);
assert(table.insert(player25.getID(), &player25)==FAILURE);
assert(table.insert(player99.getID(), &player99)==FAILURE);
assert(table.insert(player57.getID(), &player57)==FAILURE);
assert(table.remove(player71.getID())==SUCCESS);
assert(table.find(player44.getID())!=nullptr);
assert(table.insert(player51.getID(), &player51)==FAILURE);
assert(table.find(player98.getID())!=nullptr);
assert(table.remove(player17.getID())==SUCCESS);
assert(table.remove(player44.getID())==SUCCESS);
assert(table.find(player63.getID())!=nullptr);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.insert(player67.getID(), &player67)==FAILURE);
assert(table.find(player11.getID())==nullptr);
assert(table.find(player24.getID())==nullptr);
assert(table.insert(player95.getID(), &player95)==SUCCESS);
assert(table.insert(player76.getID(), &player76)==FAILURE);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.insert(player98.getID(), &player98)==FAILURE);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.insert(player6.getID(), &player6)==SUCCESS);
assert(table.remove(player62.getID())==FAILURE);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.insert(player41.getID(), &player41)==FAILURE);
assert(table.find(player85.getID())!=nullptr);
assert(table.remove(player73.getID())==SUCCESS);
assert(table.find(player4.getID())==nullptr);
assert(table.find(player53.getID())==nullptr);
assert(table.insert(player52.getID(), &player52)==SUCCESS);
assert(table.find(player87.getID())==nullptr);
assert(table.insert(player76.getID(), &player76)==SUCCESS);
assert(table.find(player54.getID())==nullptr);
assert(table.remove(player6.getID())==SUCCESS);
assert(table.find(player65.getID())!=nullptr);
assert(table.remove(player77.getID())==FAILURE);
assert(table.insert(player34.getID(), &player34)==SUCCESS);
assert(table.find(player44.getID())==nullptr);
assert(table.remove(player75.getID())==FAILURE);
assert(table.insert(player93.getID(), &player93)==SUCCESS);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.find(player13.getID())==nullptr);
assert(table.insert(player7.getID(), &player7)==FAILURE);
assert(table.insert(player14.getID(), &player14)==FAILURE);
assert(table.insert(player25.getID(), &player25)==FAILURE);
assert(table.remove(player8.getID())==FAILURE);
assert(table.insert(player14.getID(), &player14)==FAILURE);
assert(table.find(player96.getID())==nullptr);
assert(table.find(player38.getID())!=nullptr);
assert(table.remove(player44.getID())==FAILURE);
assert(table.find(player28.getID())!=nullptr);
assert(table.insert(player61.getID(), &player61)==FAILURE);
assert(table.insert(player86.getID(), &player86)==SUCCESS);
assert(table.remove(player53.getID())==FAILURE);
assert(table.remove(player54.getID())==FAILURE);
assert(table.find(player87.getID())==nullptr);
assert(table.remove(player9.getID())==FAILURE);
assert(table.remove(player50.getID())==FAILURE);
assert(table.find(player29.getID())==nullptr);
assert(table.find(player68.getID())!=nullptr);
assert(table.insert(player72.getID(), &player72)==SUCCESS);
assert(table.insert(player84.getID(), &player84)==SUCCESS);
assert(table.remove(player6.getID())==FAILURE);
assert(table.remove(player9.getID())==FAILURE);
assert(table.insert(player17.getID(), &player17)==SUCCESS);
assert(table.remove(player27.getID())==FAILURE);
assert(table.find(player64.getID())==nullptr);
assert(table.remove(player59.getID())==FAILURE);
assert(table.remove(player29.getID())==FAILURE);
assert(table.find(player36.getID())==nullptr);
assert(table.insert(player33.getID(), &player33)==FAILURE);
assert(table.remove(player49.getID())==SUCCESS);
assert(table.insert(player44.getID(), &player44)==SUCCESS);
assert(table.remove(player25.getID())==SUCCESS);
assert(table.remove(player95.getID())==SUCCESS);
assert(table.insert(player31.getID(), &player31)==FAILURE);
assert(table.insert(player26.getID(), &player26)==SUCCESS);
assert(table.find(player96.getID())==nullptr);
assert(table.insert(player79.getID(), &player79)==SUCCESS);
assert(table.remove(player50.getID())==FAILURE);
assert(table.find(player23.getID())==nullptr);
assert(table.find(player41.getID())!=nullptr);
assert(table.insert(player21.getID(), &player21)==FAILURE);
assert(table.find(player41.getID())!=nullptr);
assert(table.insert(player94.getID(), &player94)==SUCCESS);
assert(table.insert(player78.getID(), &player78)==SUCCESS);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.remove(player59.getID())==FAILURE);
assert(table.find(player14.getID())!=nullptr);
assert(table.insert(player55.getID(), &player55)==SUCCESS);
assert(table.remove(player37.getID())==SUCCESS);
assert(table.insert(player88.getID(), &player88)==SUCCESS);
assert(table.find(player17.getID())!=nullptr);
assert(table.insert(player62.getID(), &player62)==SUCCESS);
assert(table.insert(player59.getID(), &player59)==SUCCESS);
assert(table.insert(player39.getID(), &player39)==SUCCESS);
assert(table.find(player2.getID())==nullptr);
assert(table.remove(player82.getID())==SUCCESS);
assert(table.remove(player90.getID())==SUCCESS);
assert(table.find(player63.getID())!=nullptr);
assert(table.find(player4.getID())!=nullptr);
assert(table.remove(player9.getID())==FAILURE);
assert(table.find(player67.getID())!=nullptr);
assert(table.insert(player56.getID(), &player56)==SUCCESS);
assert(table.insert(player78.getID(), &player78)==FAILURE);
assert(table.insert(player63.getID(), &player63)==FAILURE);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.insert(player9.getID(), &player9)==SUCCESS);
assert(table.remove(player21.getID())==SUCCESS);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.find(player79.getID())!=nullptr);
assert(table.find(player11.getID())==nullptr);
assert(table.insert(player58.getID(), &player58)==SUCCESS);
assert(table.find(player50.getID())==nullptr);
assert(table.insert(player56.getID(), &player56)==FAILURE);
assert(table.find(player16.getID())==nullptr);
assert(table.remove(player10.getID())==SUCCESS);
assert(table.remove(player95.getID())==FAILURE);
assert(table.insert(player48.getID(), &player48)==SUCCESS);
assert(table.insert(player5.getID(), &player5)==FAILURE);
assert(table.insert(player58.getID(), &player58)==FAILURE);
assert(table.insert(player18.getID(), &player18)==FAILURE);
assert(table.insert(player13.getID(), &player13)==FAILURE);
assert(table.insert(player80.getID(), &player80)==FAILURE);
assert(table.find(player36.getID())==nullptr);
assert(table.remove(player13.getID())==SUCCESS);
assert(table.remove(player83.getID())==FAILURE);
assert(table.find(player7.getID())!=nullptr);
assert(table.find(player77.getID())==nullptr);
assert(table.remove(player25.getID())==FAILURE);
assert(table.insert(player9.getID(), &player9)==FAILURE);
assert(table.remove(player20.getID())==FAILURE);
assert(table.remove(player60.getID())==SUCCESS);
assert(table.remove(player46.getID())==FAILURE);
assert(table.insert(player82.getID(), &player82)==SUCCESS);
assert(table.remove(player43.getID())==SUCCESS);
assert(table.remove(player87.getID())==FAILURE);
assert(table.insert(player61.getID(), &player61)==FAILURE);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.remove(player39.getID())==SUCCESS);
assert(table.insert(player1.getID(), &player1)==SUCCESS);
assert(table.remove(player97.getID())==FAILURE);
assert(table.remove(player26.getID())==SUCCESS);
assert(table.remove(player61.getID())==SUCCESS);
assert(table.insert(player41.getID(), &player41)==FAILURE);
assert(table.remove(player57.getID())==SUCCESS);
assert(table.find(player94.getID())!=nullptr);
assert(table.remove(player60.getID())==FAILURE);
assert(table.remove(player57.getID())==FAILURE);
assert(table.insert(player30.getID(), &player30)==SUCCESS);
assert(table.remove(player76.getID())==SUCCESS);
assert(table.insert(player45.getID(), &player45)==FAILURE);
assert(table.remove(player37.getID())==FAILURE);
assert(table.remove(player75.getID())==FAILURE);
assert(table.insert(player5.getID(), &player5)==FAILURE);
assert(table.insert(player73.getID(), &player73)==SUCCESS);
assert(table.remove(player4.getID())==FAILURE);
assert(table.insert(player75.getID(), &player75)==SUCCESS);
assert(table.insert(player96.getID(), &player96)==SUCCESS);
assert(table.insert(player92.getID(), &player92)==FAILURE);
assert(table.insert(player49.getID(), &player49)==SUCCESS);
assert(table.remove(player13.getID())==FAILURE);
assert(table.insert(player41.getID(), &player41)==FAILURE);
assert(table.insert(player53.getID(), &player53)==SUCCESS);
assert(table.find(player22.getID())!=nullptr);
assert(table.remove(player55.getID())==SUCCESS);
assert(table.find(player48.getID())!=nullptr);
assert(table.remove(player32.getID())==SUCCESS);
assert(table.find(player61.getID())==nullptr);
assert(table.remove(player48.getID())==SUCCESS);
assert(table.insert(player32.getID(), &player32)==SUCCESS);
assert(table.remove(player78.getID())==SUCCESS);
assert(table.insert(player22.getID(), &player22)==FAILURE);
assert(table.find(player59.getID())!=nullptr);
assert(table.remove(player71.getID())==FAILURE);
assert(table.remove(player54.getID())==FAILURE);
assert(table.find(player28.getID())!=nullptr);
assert(table.find(player39.getID())==nullptr);
assert(table.insert(player46.getID(), &player46)==SUCCESS);
assert(table.remove(player60.getID())==FAILURE);
assert(table.find(player64.getID())==nullptr);
assert(table.find(player25.getID())==nullptr);
assert(table.insert(player87.getID(), &player87)==SUCCESS);
assert(table.remove(player97.getID())==FAILURE);
assert(table.remove(player78.getID())==FAILURE);
assert(table.remove(player57.getID())==FAILURE);
assert(table.remove(player56.getID())==SUCCESS);
assert(table.insert(player27.getID(), &player27)==SUCCESS);
assert(table.remove(player99.getID())==SUCCESS);
assert(table.find(player69.getID())!=nullptr);
assert(table.insert(player84.getID(), &player84)==FAILURE);
assert(table.insert(player9.getID(), &player9)==FAILURE);
assert(table.insert(player86.getID(), &player86)==FAILURE);
assert(table.insert(player4.getID(), &player4)==SUCCESS);
assert(table.find(player89.getID())!=nullptr);
assert(table.remove(player25.getID())==FAILURE);
assert(table.insert(player45.getID(), &player45)==FAILURE);
assert(table.find(player88.getID())!=nullptr);
assert(table.insert(player5.getID(), &player5)==FAILURE);
assert(table.insert(player81.getID(), &player81)==FAILURE);
assert(table.find(player67.getID())!=nullptr);
assert(table.remove(player14.getID())==SUCCESS);
assert(table.insert(player13.getID(), &player13)==SUCCESS);
assert(table.remove(player94.getID())==SUCCESS);
assert(table.insert(player12.getID(), &player12)==SUCCESS);
assert(table.remove(player61.getID())==FAILURE);
assert(table.remove(player39.getID())==FAILURE);
assert(table.insert(player22.getID(), &player22)==FAILURE);
assert(table.find(player6.getID())==nullptr);
assert(table.remove(player89.getID())==SUCCESS);
assert(table.insert(player25.getID(), &player25)==SUCCESS);
assert(table.remove(player4.getID())==SUCCESS);
assert(table.remove(player20.getID())==FAILURE);
assert(table.find(player47.getID())!=nullptr);
assert(table.insert(player14.getID(), &player14)==SUCCESS);
assert(table.remove(player54.getID())==FAILURE);
assert(table.find(player36.getID())==nullptr);
assert(table.insert(player80.getID(), &player80)==FAILURE);
assert(table.insert(player72.getID(), &player72)==FAILURE);
assert(table.remove(player89.getID())==FAILURE);
assert(table.find(player46.getID())!=nullptr);
assert(table.insert(player43.getID(), &player43)==SUCCESS);
assert(table.insert(player43.getID(), &player43)==FAILURE);
assert(table.remove(player1.getID())==SUCCESS);
assert(table.remove(player35.getID())==SUCCESS);
assert(table.insert(player80.getID(), &player80)==FAILURE);
assert(table.insert(player5.getID(), &player5)==FAILURE);
assert(table.remove(player12.getID())==SUCCESS);
assert(table.find(player95.getID())==nullptr);
assert(table.insert(player36.getID(), &player36)==SUCCESS);
assert(table.find(player5.getID())!=nullptr);
assert(table.find(player71.getID())==nullptr);
assert(table.insert(player57.getID(), &player57)==SUCCESS);
assert(table.find(player33.getID())!=nullptr);
assert(table.find(player8.getID())==nullptr);
assert(table.insert(player13.getID(), &player13)==FAILURE);
assert(table.remove(player18.getID())==SUCCESS);
assert(table.remove(player79.getID())==SUCCESS);
assert(table.find(player7.getID())!=nullptr);
assert(table.find(player79.getID())==nullptr);
assert(table.remove(player7.getID())==SUCCESS);
assert(table.remove(player24.getID())==FAILURE);
assert(table.insert(player11.getID(), &player11)==SUCCESS);
assert(table.insert(player40.getID(), &player40)==FAILURE);
assert(table.insert(player29.getID(), &player29)==SUCCESS);
assert(table.insert(player80.getID(), &player80)==FAILURE);
cout<<"it's all good mahmood"<<endl;
    return 0;
}
